// <auto-generated />
using System;
using DOOR.EF.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace DOOR.EF.Migrations
{
    [DbContext(typeof(DOOROracleContext))]
    partial class DOOROracleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("UD_MTEJEDOR")
                .UseCollation("USING_NLS_COMP")
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.HasSequence("COURSE_SEQ");

            modelBuilder.HasSequence("INSTRUCTOR_SEQ");

            modelBuilder.HasSequence("ORA_TRANSLATE_MSG_SEQ");

            modelBuilder.HasSequence("SECTION_SEQ");

            modelBuilder.HasSequence("STUDENT_SEQ");

            modelBuilder.Entity("DOOR.EF.Models.Course", b =>
                {
                    b.Property<int>("CourseNo")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("COURSE_NO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseNo"), 1L, 1);

                    b.Property<int>("SchoolId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("SCHOOL_ID");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("NUMBER(9,2)")
                        .HasColumnName("COST");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("MODIFIED_BY");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIED_DATE");

                    b.Property<int?>("Prerequisite")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("PREREQUISITE");

                    b.Property<int?>("PrerequisiteSchoolId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("PREREQUISITE_SCHOOL_ID");

                    b.HasKey("CourseNo", "SchoolId")
                        .HasName("COURSE_PK");

                    b.HasIndex("SchoolId");

                    b.HasIndex("Prerequisite", "PrerequisiteSchoolId");

                    b.HasIndex(new[] { "Prerequisite" }, "CRSE_CRSE_FK_I");

                    b.HasIndex(new[] { "CourseNo" }, "CRSE_PK")
                        .IsUnique();

                    b.ToTable("COURSE", "UD_MTEJEDOR");
                });

            modelBuilder.Entity("DOOR.EF.Models.Enrollment", b =>
                {
                    b.Property<int>("SectionId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("SECTION_ID");

                    b.Property<int>("StudentId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("STUDENT_ID");

                    b.Property<int>("SchoolId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("SCHOOL_ID");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("CREATED_DATE");

                    b.Property<DateTime>("EnrollDate")
                        .HasColumnType("DATE")
                        .HasColumnName("ENROLL_DATE");

                    b.Property<byte?>("FinalGrade")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("FINAL_GRADE");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("MODIFIED_BY");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIED_DATE");

                    b.HasKey("SectionId", "StudentId", "SchoolId")
                        .HasName("ENROLLMENT_PK");

                    b.HasIndex("SchoolId");

                    b.HasIndex("SectionId", "SchoolId");

                    b.HasIndex("StudentId", "SchoolId");

                    b.HasIndex(new[] { "StudentId", "SectionId" }, "ENR_PK")
                        .IsUnique();

                    b.HasIndex(new[] { "SectionId" }, "ENR_SECT_FK_I");

                    b.ToTable("ENROLLMENT", "UD_MTEJEDOR");
                });

            modelBuilder.Entity("DOOR.EF.Models.Grade", b =>
                {
                    b.Property<int>("SchoolId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("SCHOOL_ID");

                    b.Property<int>("StudentId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("STUDENT_ID");

                    b.Property<int>("SectionId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("SECTION_ID");

                    b.Property<string>("GradeTypeCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("GRADE_TYPE_CODE")
                        .IsFixedLength();

                    b.Property<byte>("GradeCodeOccurrence")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("GRADE_CODE_OCCURRENCE");

                    b.Property<string>("Comments")
                        .HasColumnType("CLOB")
                        .HasColumnName("COMMENTS");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("MODIFIED_BY");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIED_DATE");

                    b.Property<decimal>("NumericGrade")
                        .HasColumnType("NUMBER(5,2)")
                        .HasColumnName("NUMERIC_GRADE");

                    b.HasKey("SchoolId", "StudentId", "SectionId", "GradeTypeCode", "GradeCodeOccurrence")
                        .HasName("GRADE_PK");

                    b.HasIndex("SchoolId", "SectionId", "GradeTypeCode");

                    b.HasIndex("SectionId", "StudentId", "SchoolId");

                    b.ToTable("GRADE", "UD_MTEJEDOR");
                });

            modelBuilder.Entity("DOOR.EF.Models.GradeConversion", b =>
                {
                    b.Property<int>("SchoolId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("SCHOOL_ID");

                    b.Property<string>("LetterGrade")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("LETTER_GRADE");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("CREATED_DATE");

                    b.Property<decimal>("GradePoint")
                        .HasColumnType("NUMBER(3,2)")
                        .HasColumnName("GRADE_POINT");

                    b.Property<byte>("MaxGrade")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("MAX_GRADE");

                    b.Property<byte>("MinGrade")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("MIN_GRADE");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("MODIFIED_BY");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIED_DATE");

                    b.HasKey("SchoolId", "LetterGrade")
                        .HasName("GRADE_CONVERSION_PK");

                    b.ToTable("GRADE_CONVERSION", "UD_MTEJEDOR");
                });

            modelBuilder.Entity("DOOR.EF.Models.GradeType", b =>
                {
                    b.Property<int>("SchoolId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("SCHOOL_ID");

                    b.Property<string>("GradeTypeCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("GRADE_TYPE_CODE")
                        .IsFixedLength();

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("MODIFIED_BY");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIED_DATE");

                    b.HasKey("SchoolId", "GradeTypeCode")
                        .HasName("GRADE_TYPE_PK");

                    b.ToTable("GRADE_TYPE", "UD_MTEJEDOR");
                });

            modelBuilder.Entity("DOOR.EF.Models.GradeTypeWeight", b =>
                {
                    b.Property<int>("SchoolId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("SCHOOL_ID");

                    b.Property<int>("SectionId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("SECTION_ID");

                    b.Property<string>("GradeTypeCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("GRADE_TYPE_CODE")
                        .IsFixedLength();

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("CREATED_DATE");

                    b.Property<bool>("DropLowest")
                        .HasPrecision(1)
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("DROP_LOWEST");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("MODIFIED_BY");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIED_DATE");

                    b.Property<byte>("NumberPerSection")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("NUMBER_PER_SECTION");

                    b.Property<byte>("PercentOfFinalGrade")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("PERCENT_OF_FINAL_GRADE");

                    b.HasKey("SchoolId", "SectionId", "GradeTypeCode")
                        .HasName("GRADE_TYPE_WEIGHT_PK");

                    b.HasIndex("SchoolId", "GradeTypeCode");

                    b.HasIndex("SectionId", "SchoolId");

                    b.ToTable("GRADE_TYPE_WEIGHT", "UD_MTEJEDOR");
                });

            modelBuilder.Entity("DOOR.EF.Models.Instructor", b =>
                {
                    b.Property<int>("SchoolId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("SCHOOL_ID");

                    b.Property<int>("InstructorId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("INSTRUCTOR_ID");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("FIRST_NAME");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("LAST_NAME");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("MODIFIED_BY");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIED_DATE");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("PHONE");

                    b.Property<string>("Salutation")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("SALUTATION");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("STREET_ADDRESS");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("ZIP");

                    b.HasKey("SchoolId", "InstructorId")
                        .HasName("INSTRUCTOR_PK");

                    b.HasIndex("Zip");

                    b.ToTable("INSTRUCTOR", "UD_MTEJEDOR");
                });

            modelBuilder.Entity("DOOR.EF.Models.OraTranslateMsg", b =>
                {
                    b.Property<string>("CreatedBy")
                        .HasMaxLength(38)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(38)")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(38)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(38)")
                        .HasColumnName("MODIFIED_BY");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIED_DATE");

                    b.Property<string>("OraConstraintName")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(128)")
                        .HasColumnName("ORA_CONSTRAINT_NAME");

                    b.Property<string>("OraErrorMessage")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("ORA_ERROR_MESSAGE");

                    b.Property<string>("OraTranslateMsgId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(38)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(38)")
                        .HasColumnName("ORA_TRANSLATE_MSG_ID")
                        .HasDefaultValueSql("sys_guid()");

                    b.ToTable("ORA_TRANSLATE_MSG", "UD_MTEJEDOR");
                });

            modelBuilder.Entity("DOOR.EF.Models.School", b =>
                {
                    b.Property<int>("SchoolId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("SCHOOL_ID");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("MODIFIED_BY");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIED_DATE");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("SCHOOL_NAME");

                    b.HasKey("SchoolId");

                    b.ToTable("SCHOOL", "UD_MTEJEDOR");
                });

            modelBuilder.Entity("DOOR.EF.Models.Section", b =>
                {
                    b.Property<int>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("SECTION_ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SectionId"), 1L, 1);

                    b.Property<int>("SchoolId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("SCHOOL_ID");

                    b.Property<byte?>("Capacity")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("CAPACITY");

                    b.Property<int>("CourseNo")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("COURSE_NO");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("CREATED_DATE");

                    b.Property<int>("InstructorId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("INSTRUCTOR_ID");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("LOCATION");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("MODIFIED_BY");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIED_DATE");

                    b.Property<byte>("SectionNo")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("SECTION_NO");

                    b.Property<DateTime?>("StartDateTime")
                        .HasColumnType("DATE")
                        .HasColumnName("START_DATE_TIME");

                    b.HasKey("SectionId", "SchoolId")
                        .HasName("SECTION_PK");

                    b.HasIndex("CourseNo", "SchoolId");

                    b.HasIndex("SchoolId", "InstructorId");

                    b.HasIndex(new[] { "CourseNo" }, "SECT_CRSE_FK_I");

                    b.HasIndex(new[] { "InstructorId" }, "SECT_INST_FK_I");

                    b.HasIndex(new[] { "SectionId" }, "SECT_PK")
                        .IsUnique();

                    b.HasIndex(new[] { "SectionNo", "CourseNo" }, "SECT_SECT2_UK")
                        .IsUnique();

                    b.ToTable("SECTION", "UD_MTEJEDOR");
                });

            modelBuilder.Entity("DOOR.EF.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("STUDENT_ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"), 1L, 1);

                    b.Property<int>("SchoolId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("SCHOOL_ID");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("Employer")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("EMPLOYER");

                    b.Property<string>("FirstName")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("FIRST_NAME");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("LAST_NAME");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("MODIFIED_BY");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIED_DATE");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("PHONE");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("DATE")
                        .HasColumnName("REGISTRATION_DATE");

                    b.Property<string>("Salutation")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("SALUTATION");

                    b.Property<string>("StreetAddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("STREET_ADDRESS");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("ZIP");

                    b.HasKey("StudentId", "SchoolId")
                        .HasName("STUDENT_PK");

                    b.HasIndex("SchoolId");

                    b.HasIndex(new[] { "StudentId" }, "STU_PK")
                        .IsUnique();

                    b.HasIndex(new[] { "Zip" }, "STU_ZIP_FK_I");

                    b.ToTable("STUDENT", "UD_MTEJEDOR");
                });

            modelBuilder.Entity("DOOR.EF.Models.Zipcode", b =>
                {
                    b.Property<string>("Zip")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("ZIP");

                    b.Property<string>("City")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("CITY");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("MODIFIED_BY");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIED_DATE");

                    b.Property<string>("State")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("STATE")
                        .IsFixedLength();

                    b.HasKey("Zip")
                        .HasName("ZIP_PK");

                    b.ToTable("ZIPCODE", "UD_MTEJEDOR");
                });

            modelBuilder.Entity("DOOR.EF.Models.Course", b =>
                {
                    b.HasOne("DOOR.EF.Models.School", "School")
                        .WithMany("Courses")
                        .HasForeignKey("SchoolId")
                        .IsRequired()
                        .HasConstraintName("COURSE_FK2");

                    b.HasOne("DOOR.EF.Models.Course", "PrerequisiteNavigation")
                        .WithMany("InversePrerequisiteNavigation")
                        .HasForeignKey("Prerequisite", "PrerequisiteSchoolId")
                        .HasConstraintName("COURSE_FK1");

                    b.Navigation("PrerequisiteNavigation");

                    b.Navigation("School");
                });

            modelBuilder.Entity("DOOR.EF.Models.Enrollment", b =>
                {
                    b.HasOne("DOOR.EF.Models.School", "School")
                        .WithMany("Enrollments")
                        .HasForeignKey("SchoolId")
                        .IsRequired()
                        .HasConstraintName("ENROLLMENT_FK3");

                    b.HasOne("DOOR.EF.Models.Section", "S")
                        .WithMany("Enrollments")
                        .HasForeignKey("SectionId", "SchoolId")
                        .IsRequired()
                        .HasConstraintName("ENROLLMENT_FK1");

                    b.HasOne("DOOR.EF.Models.Student", "SNavigation")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId", "SchoolId")
                        .IsRequired()
                        .HasConstraintName("ENROLLMENT_FK2");

                    b.Navigation("S");

                    b.Navigation("SNavigation");

                    b.Navigation("School");
                });

            modelBuilder.Entity("DOOR.EF.Models.Grade", b =>
                {
                    b.HasOne("DOOR.EF.Models.School", "School")
                        .WithMany("Grades")
                        .HasForeignKey("SchoolId")
                        .IsRequired()
                        .HasConstraintName("GRADE_FK1");

                    b.HasOne("DOOR.EF.Models.GradeTypeWeight", "GradeTypeWeight")
                        .WithMany("Grades")
                        .HasForeignKey("SchoolId", "SectionId", "GradeTypeCode")
                        .IsRequired()
                        .HasConstraintName("GRADE_FK3");

                    b.HasOne("DOOR.EF.Models.Enrollment", "S")
                        .WithMany("Grades")
                        .HasForeignKey("SectionId", "StudentId", "SchoolId")
                        .IsRequired()
                        .HasConstraintName("GRADE_FK2");

                    b.Navigation("GradeTypeWeight");

                    b.Navigation("S");

                    b.Navigation("School");
                });

            modelBuilder.Entity("DOOR.EF.Models.GradeConversion", b =>
                {
                    b.HasOne("DOOR.EF.Models.School", "School")
                        .WithMany("GradeConversions")
                        .HasForeignKey("SchoolId")
                        .IsRequired()
                        .HasConstraintName("GRADE_CONVERSION_FK1");

                    b.Navigation("School");
                });

            modelBuilder.Entity("DOOR.EF.Models.GradeType", b =>
                {
                    b.HasOne("DOOR.EF.Models.School", "School")
                        .WithMany("GradeTypes")
                        .HasForeignKey("SchoolId")
                        .IsRequired()
                        .HasConstraintName("GRADE_TYPE_FK1");

                    b.Navigation("School");
                });

            modelBuilder.Entity("DOOR.EF.Models.GradeTypeWeight", b =>
                {
                    b.HasOne("DOOR.EF.Models.School", "School")
                        .WithMany("GradeTypeWeights")
                        .HasForeignKey("SchoolId")
                        .IsRequired()
                        .HasConstraintName("GRADE_TYPE_WEIGHT_FK1");

                    b.HasOne("DOOR.EF.Models.GradeType", "GradeType")
                        .WithMany("GradeTypeWeights")
                        .HasForeignKey("SchoolId", "GradeTypeCode")
                        .IsRequired()
                        .HasConstraintName("GRADE_TYPE_WEIGHT_FK2");

                    b.HasOne("DOOR.EF.Models.Section", "S")
                        .WithMany("GradeTypeWeights")
                        .HasForeignKey("SectionId", "SchoolId")
                        .IsRequired()
                        .HasConstraintName("GRADE_TYPE_WEIGHT_FK3");

                    b.Navigation("GradeType");

                    b.Navigation("S");

                    b.Navigation("School");
                });

            modelBuilder.Entity("DOOR.EF.Models.Instructor", b =>
                {
                    b.HasOne("DOOR.EF.Models.School", "School")
                        .WithMany("Instructors")
                        .HasForeignKey("SchoolId")
                        .IsRequired()
                        .HasConstraintName("INSTRUCTOR_FK1");

                    b.HasOne("DOOR.EF.Models.Zipcode", "ZipNavigation")
                        .WithMany("Instructors")
                        .HasForeignKey("Zip")
                        .IsRequired()
                        .HasConstraintName("INSTRUCTOR_FK2");

                    b.Navigation("School");

                    b.Navigation("ZipNavigation");
                });

            modelBuilder.Entity("DOOR.EF.Models.Section", b =>
                {
                    b.HasOne("DOOR.EF.Models.School", "School")
                        .WithMany("Sections")
                        .HasForeignKey("SchoolId")
                        .IsRequired()
                        .HasConstraintName("SECTION_FK2");

                    b.HasOne("DOOR.EF.Models.Course", "Course")
                        .WithMany("Sections")
                        .HasForeignKey("CourseNo", "SchoolId")
                        .IsRequired()
                        .HasConstraintName("SECTION_FK1");

                    b.HasOne("DOOR.EF.Models.Instructor", "Instructor")
                        .WithMany("Sections")
                        .HasForeignKey("SchoolId", "InstructorId")
                        .IsRequired()
                        .HasConstraintName("SECTION_FK3");

                    b.Navigation("Course");

                    b.Navigation("Instructor");

                    b.Navigation("School");
                });

            modelBuilder.Entity("DOOR.EF.Models.Student", b =>
                {
                    b.HasOne("DOOR.EF.Models.School", "School")
                        .WithMany("Students")
                        .HasForeignKey("SchoolId")
                        .IsRequired()
                        .HasConstraintName("STUDENT_FK1");

                    b.Navigation("School");
                });

            modelBuilder.Entity("DOOR.EF.Models.Course", b =>
                {
                    b.Navigation("InversePrerequisiteNavigation");

                    b.Navigation("Sections");
                });

            modelBuilder.Entity("DOOR.EF.Models.Enrollment", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("DOOR.EF.Models.GradeType", b =>
                {
                    b.Navigation("GradeTypeWeights");
                });

            modelBuilder.Entity("DOOR.EF.Models.GradeTypeWeight", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("DOOR.EF.Models.Instructor", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("DOOR.EF.Models.School", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Enrollments");

                    b.Navigation("GradeConversions");

                    b.Navigation("GradeTypeWeights");

                    b.Navigation("GradeTypes");

                    b.Navigation("Grades");

                    b.Navigation("Instructors");

                    b.Navigation("Sections");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("DOOR.EF.Models.Section", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("GradeTypeWeights");
                });

            modelBuilder.Entity("DOOR.EF.Models.Student", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("DOOR.EF.Models.Zipcode", b =>
                {
                    b.Navigation("Instructors");
                });
#pragma warning restore 612, 618
        }
    }
}
